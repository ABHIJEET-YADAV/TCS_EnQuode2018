<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="enquodeTesting" duration-ms="41804" started-at="2018-08-08T14:10:53Z" finished-at="2018-08-08T14:11:35Z">
    <groups>
    </groups>
    <test name="testngTest" duration-ms="41804" started-at="2018-08-08T14:10:53Z" finished-at="2018-08-08T14:11:35Z">
      <class name="testClass.TestCases">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testClass.TestCases@36b4cef0]" name="beforeMethod" is-config="true" duration-ms="4169" started-at="2018-08-08T14:10:54Z" finished-at="2018-08-08T14:10:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TestcaseLogin(java.lang.String, java.lang.String)[pri:2, instance:testClass.TestCases@36b4cef0]" name="TestcaseLogin" duration-ms="16652" started-at="2018-08-08T14:10:59Z" data-provider="loginData" finished-at="2018-08-08T14:11:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abhijeet123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abhijeet]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestcaseLogin -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClass.TestCases@36b4cef0]" name="afterMethod" is-config="true" duration-ms="1053" started-at="2018-08-08T14:11:15Z" finished-at="2018-08-08T14:11:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestcaseLogin status=SUCCESS method=TestCases.TestcaseLogin(java.lang.String, java.lang.String)[pri:2, instance:testClass.TestCases@36b4cef0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testClass.TestCases@36b4cef0]" name="beforeMethod" is-config="true" duration-ms="2890" started-at="2018-08-08T14:11:16Z" finished-at="2018-08-08T14:11:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="TestcaseLogin(java.lang.String, java.lang.String)[pri:2, instance:testClass.TestCases@36b4cef0]" name="TestcaseLogin" duration-ms="14282" started-at="2018-08-08T14:11:19Z" data-provider="loginData" finished-at="2018-08-08T14:11:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abhijeet111]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abhijeet]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Login Failed Because Invalid Username Or Passward expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Login Failed Because Invalid Username Or Passward expected [false] but found [true]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at pageObjects.RegisterAndLogin.checkLoginSuccess(RegisterAndLogin.java:142)
at pageObjects.RegisterAndLogin.userLogin(RegisterAndLogin.java:34)
at testClass.TestCases.TestcaseLogin(TestCases.java:56)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestcaseLogin -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClass.TestCases@36b4cef0]" name="afterMethod" is-config="true" duration-ms="1695" started-at="2018-08-08T14:11:34Z" finished-at="2018-08-08T14:11:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestcaseLogin status=FAILURE method=TestCases.TestcaseLogin(java.lang.String, java.lang.String)[pri:2, instance:testClass.TestCases@36b4cef0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testClass.TestCases -->
    </test> <!-- testngTest -->
  </suite> <!-- enquodeTesting -->
</testng-results>
